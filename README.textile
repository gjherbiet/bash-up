h1. bash-up: a versatile bash and environment setup utility

_bash-up_ manages a mash-up of well-organized configuration files for your command-line environment and @bash@ configuration.

The objective of _bash-up_ is to provide a *unique* set of configuration files that you can deploy on as many computer as you like, whatever their system (as long as it is somewhat *NIX and @bash@ compliant).

h2. Principles

h3. Using @.profile@ and @.bashrc@ only as loaders of many many other files...

In the _bash-up_ approach, the @.profile@ and @.bashrc@ files don't do anything but _sourcing_ other configuration files in your _bash-up_ directory.

You will not declare *any* variable, alias or function in those two files (well, except the *one* needed by _bash-up_...).

*Why oh why ?* Let's read next section...

h3. A hierarchy of generic-to-specific files

All configuration files for _bash-up_ are organized by *sections* (e.g. _profile_, _aliases_, _functions_, _completion_, etc.) so you can easily organize them.

For each section, files can be *common* to all systems and all hosts (these are the files placed directly in a *section* directory), or *system-specific* (when placed in a *system* directory, e.g. _Linux_, _Darwin_ or whatever @uname -s@ may return), or *host-specific* (when placed in a *host* directory, using the output of @hostname -s@ to determine the current machine).

Have a look at this example:

<pre>
bash-it/
|- aliases/
   |- aliases_one
   |- some_more
   |- Linux/
   |  |- linux_aliases
   |- Darwin/
      |- macosx_aliases
      |- machine_2/
      |  |- specific_aliases
      |  |- the_more_the_better
      |- machine_3/
         |- for_machine_3
</pre>

Consider me having three computers (_lucky me!_):
* @machine_1@, a good old desktop running Linux
* @machine_2@, a MacBook Pro running Mac OS X
* @machine_3@, an iMac running Mac OS X

The files @aliases_one@ and @some_more@ will be sourced by all three machines (these are the *common* files).

@linux_aliases@ will only be sourced by @machine_1@, as it is the only machine running Linux.

@macosx_aliases@ will be sourced by both @machine_2@ and @machine_3@ (as they run Mac OS X). @specific_aliases@ and @the_more_the_better@ will be sourced by @machine_2@ *only*, as *host-specific* files and @for_machine_3@ is naturally loaded only on @machine_3@.

Note that the actual name of the file doesn't matter, so *feel free to name them to whatever you think is relevant!*

Another good principle is that *don't fear to split your configuration in as many files as you want!*

h3. What if...

*What if, say, @machine_2@ dual-boots on both Mac OS X and Linux ?*
Okay, create a @machine_2@ *host* directory under the @Linux@ *system* directory and create there *symbolic links* for all relevant configuration files.

*What if I want some more specific system discriminant, like the OS version or the distribution?*
Err,... I already thought of that (hey, that's the proof!) but I'll work on it for future releases.

h2. Installation

There is no installation script (so fat, see next section...).

To start using _bash-up_, do the following:

* *Back-up* your @~/.profile@ and @~/.bashrc@ (or @~/.bash_profile_@) files.
These are important files for your system, and you'll be happy to find them back if _bash-up_ doesn't satisfy you.

* *Back-up* your @~/.profile@ and @~/.bashrc@ (or @~/.bash_profile_@) files.
(Just to be sure you've done it...)

* *Clone* this repository, or *download* the latest archive of the source to a given _bash_up_ directory
(I assumed @~/.bash-up@ as default).

* *Fill* as many *section* folders you want, with as many configuration files you want, using the hierarchy explained above
(I give you _default_ and _profile_ to start with).

* *Replace* your @~/.profile@ and @~/.bashrc@ (or @~/.bash_profile_@) files with the ones provided by _bash-up_ (@profile_template@ and @bashrc_template@ respectively). You can move them, copy them or create symbolic links to replace your original files, it really doesn't matter.

* If *you used a non-default directory* to download _bash-up_, you need to *edit the* @BU_DIRECTORY@ *variable* in both _bash-up_'s @.profile@ and _bash-up_'s @.bashrc@ files.
Set this variable to point to the location where your _bash-up_ installation is located.

* *Done!*

Now, next time you'll log in or start a @bash@ session:

* _bash-up_'s @.profile@ will load all the applicable configuration files located in the _profile_ *section* folder.

* _bash-up_'s @.bashrc@ will load all the applicable configuration files located in all the other *section* folders.

*Note:* As a consequence, the _profile_ *section* folder is necessary for _bash-up_ to perform correctly.

h2. In further release (yes, this might come someday...)

* Installation script
* Finer operating system management (OS version, etc..)

h2. Credits and references

This project is freely inspired by and complementary to other contributions such as "oh-my-zsh":http://github.com/robbyrussell/oh-my-zsh or "bash-it":http://github.com/revans/bash-it.

Try them, use them, keep with them if you feel they fulfill your needs better.

h2. License

This program is licensed under the "GNU GPL v.3":http://www.gnu.org/licenses/gpl.html license. See previous link or the file @gpl-3.0.txt@ for further details.
